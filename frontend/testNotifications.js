// Simple test script to verify the notification API endpoints
import axios from 'axios';

const API_URL = 'http://localhost:8000/api/notifications';

// Simulate a push subscription object (normally generated by the browser)
const simulateSubscription = {
  endpoint: 'https://example.com/push-service/' + Math.random().toString(36).substring(2),
  expirationTime: null,
  keys: {
    p256dh: 'BNcRdreALRFXTkOOUHK1EtK2wtaz5Ry4YfYCA_0QTpQtUbVlUls0VJXg7A8u-Ts1XbjhazAkj7I99e8QcYP7DkM',
    auth: 'tBHItJI5svbpez7KI4CCXg'
  }
};

// 1. Test subscription endpoint
async function testSubscribe() {
  try {
    console.log('Testing subscription endpoint...');
    const response = await axios.post(`${API_URL}/subscribe`, simulateSubscription);
    console.log('Subscription response:', response.data);
    return true;
  } catch (error) {
    console.error('Subscription test failed:', error.response?.data || error.message);
    return false;
  }
}

// 2. Test send notification endpoint
async function testSendNotification() {
  try {
    console.log('Testing send notification endpoint...');
    const response = await axios.post(`${API_URL}/send`, {
      title: 'Test Notification',
      body: 'This is a test notification from the API test script',
      icon: '/favicon.svg',
      url: '/events'
    });
    console.log('Send notification response:', response.data);
    return true;
  } catch (error) {
    console.error('Send notification test failed:', error.response?.data || error.message);
    return false;
  }
}

// Run the tests
async function runTests() {
  console.log('Starting notification API tests...');
  
  // First subscribe
  const subscribeSuccess = await testSubscribe();
  
  if (subscribeSuccess) {
    // Then try to send a notification
    await testSendNotification();
  }
  
  console.log('Notification API tests completed');
}

runTests(); 